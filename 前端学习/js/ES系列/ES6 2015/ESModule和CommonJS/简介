Commonjs 的特性如下：

  CommonJS 模块由 JS 运行时实现。
  CommonJs 是单个值导出，本质上导出的就是 exports 属性。
  CommonJS 是可以动态加载的，对每一个加载都存在缓存，可以有效的解决循环引用问题。
  CommonJS 模块同步加载并执行模块文件。


Es module 的特性如下：

  ES6 Module 静态的，不能放在块级作用域内，代码发生在编译时。
  ES6 Module 的值是动态绑定的，可以通过导出方法修改，可以直接访问修改结果。
  ES6 Module 可以导出多个属性和方法，可以单个导入导出，混合导入导出。
  ES6 模块提前加载并执行模块文件，
  ES6 Module 导入模块在严格模式下。
  ES6 Module 的特性可以很容易实现 Tree Shaking 和 Code Splitting。



从 ES6 开始， JavaScript 才真正意义上有自己的模块化规范，
Es Module 的产生有很多优势，比如:

借助 Es Module 的静态导入导出的优势，实现了 tree shaking。
Es Module 还可以 import() 懒加载方式实现代码分割。

在 Es Module 中用 export 用来导出模块，import 用来导入模块。但是 export 配合 import 会有很多种组合情况。

（1）export 正常导出，import 导入
（2）默认导出 export default
（3）混合导入｜导出
（4）重属名导入
（5）重定向导出
（5）无需导入模块，只运行模块
（5）动态导入


注：在node环境中默认使用CommonJS,不兼容ES module模块化写法，在node13.2版本默认打开了ES6模块支持
如果需要使用ES module
（1）文件后缀需要改为.mjs
（2）在package.json中设置 type 为 module
